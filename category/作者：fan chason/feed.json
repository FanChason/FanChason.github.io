{
    "version": "https://jsonfeed.org/version/1",
    "title": "Fan Chason's Blog • All posts by \"作者：fan chason\" category",
    "description": "Fan Chason的个人博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2019/10/17/Viper%E6%9E%B6%E6%9E%84%E6%8E%A2%E7%B4%A2%E5%AE%9E%E8%B7%B5%EF%BC%88%E4%B8%80%EF%BC%89/",
            "url": "http://example.com/2019/10/17/Viper%E6%9E%B6%E6%9E%84%E6%8E%A2%E7%B4%A2%E5%AE%9E%E8%B7%B5%EF%BC%88%E4%B8%80%EF%BC%89/",
            "title": "Viper架构探索实践（一）",
            "date_published": "2019-10-17T11:35:00.000Z",
            "content_html": "<h1 id=\"Viper架构图\"><a href=\"#Viper架构图\" class=\"headerlink\" title=\"Viper架构图\"></a>Viper架构图</h1><p><img src=\"http://upload-images.jianshu.io/upload_images/1432381-6aa65d17f5ed033f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1432381-0b5691a0070fbabd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1865432-580872920986b640.png\"></p>\n<h2 id=\"VIPER的主要部分\"><a href=\"#VIPER的主要部分\" class=\"headerlink\" title=\"VIPER的主要部分\"></a>VIPER的主要部分</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><ul>\n<li>View: (视图）： 显示Presenter告知的内容，并将用户输入中继回Presenter。</li>\n<li>Interactor: (交互器）：包含用例指定的业务逻辑。</li>\n<li>Presenter: (表示层，也可称主持人）：包含用于准备显示内容（如从Interactor接收的）和用于对用户输入做出反应（通过从Interactor请求新数据）的视图逻辑。</li>\n<li>Entity: (实体）：包含Interactor使用的基本模型对象。</li>\n<li>Routing: (路由）：包含用于描述按哪个顺序显示哪些屏幕的导航逻辑。</li>\n</ul>\n<blockquote>\n<p>这种分离也符合<a href=\"http://www.objectmentor.com/resources/articles/srp.pdf\">单一责任原则</a>。<br>Interactor负责业务分析师<br>Presenter代表交互设计师<br>View负责视觉设计师</p>\n</blockquote>\n<h3 id=\"相比MVX\"><a href=\"#相比MVX\" class=\"headerlink\" title=\"相比MVX\"></a>相比MVX</h3><p>相比之前的MVX架构，VIPER多出了两个东西：Interactor（交互器）和Router（路由）。</p>\n<p>各部分职责如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- View</span><br><span class=\"line\">提供完整的视图，负责视图的组合、布局、更新</span><br><span class=\"line\">向Presenter提供更新视图的接口</span><br><span class=\"line\">将View相关的事件发送给Presenter</span><br><span class=\"line\"></span><br><span class=\"line\">- Presenter</span><br><span class=\"line\">接收并处理来自View的事件</span><br><span class=\"line\">向Interactor请求调用业务逻辑</span><br><span class=\"line\">向Interactor提供View中的数据</span><br><span class=\"line\">接收并处理来自Interactor的数据回调事件</span><br><span class=\"line\">通知View进行更新操作</span><br><span class=\"line\">通过Router跳转到其他View</span><br><span class=\"line\"></span><br><span class=\"line\">- Router</span><br><span class=\"line\">提供View之间的跳转功能，减少了模块间的耦合</span><br><span class=\"line\">初始化VIPER的各个模块</span><br><span class=\"line\"></span><br><span class=\"line\">- Interactor</span><br><span class=\"line\">维护主要的业务逻辑功能，向Presenter提供现有的业务用例</span><br><span class=\"line\">维护、获取、更新Entity</span><br><span class=\"line\">当有业务相关的事件发生时，处理事件，并通知Presenter</span><br><span class=\"line\"></span><br><span class=\"line\">- Entity</span><br><span class=\"line\">和Model一样的数据模型</span><br></pre></td></tr></table></figure>\n<h1 id=\"Viper模版代码生成工具\"><a href=\"#Viper模版代码生成工具\" class=\"headerlink\" title=\"Viper模版代码生成工具\"></a>Viper模版代码生成工具</h1><h2 id=\"推荐两个模版\"><a href=\"#推荐两个模版\" class=\"headerlink\" title=\"推荐两个模版\"></a>推荐两个模版</h2><h3 id=\"Viperit\"><a href=\"#Viperit\" class=\"headerlink\" title=\"Viperit\"></a><a href=\"https://github.com/ferranabello/Viperit\">Viperit</a></h3><ul>\n<li>支持Swift、SwiftUI</li>\n<li>可创建viper架构模版</li>\n</ul>\n<h3 id=\"Generamba\"><a href=\"#Generamba\" class=\"headerlink\" title=\"Generamba\"></a><a href=\"https://github.com/strongself/Generamba\">Generamba</a></h3><ul>\n<li>支持OC和Swift</li>\n<li>可以创建mvvm、viper模版</li>\n</ul>\n<h2 id=\"了解模版语言Liquid\"><a href=\"#了解模版语言Liquid\" class=\"headerlink\" title=\"了解模版语言Liquid\"></a>了解模版语言Liquid</h2><p>github源码：**<a href=\"https://github.com/Shopify/liquid\">liquid</a>**<br><a href=\"https://www.baidu.com/link?url=fK4IqIz8Jd_NwiiLfMbodfFYy5521QApXPJBhxB5yD_ACOge0kdPzMlm5_3B_tT9&wd=&eqid=df8a26640004378f000000045a6a8ac1\"><em>Liquid</em> 模板语言中文文档</a></p>\n<blockquote>\n<p>Liquid 是一门开源的模板语言，由 <a href=\"https://www.shopify.com/\">Shopify</a> 创造并用 Ruby 实现。它是 Shopify 主题的骨骼，并且被用于加载店铺系统的动态内容。<br><br>从 2006 年起，Liquid 就被 Shopify 所使用，现在更是被大量 web 应用所使用</p>\n</blockquote>\n<h1 id=\"Viper架构实践\"><a href=\"#Viper架构实践\" class=\"headerlink\" title=\"Viper架构实践\"></a>Viper架构实践</h1><p>基于Viperit写了一个简单的新闻的demo<br><strong><a href=\"https://github.com/FanChason/XCViperitDemo\">XCViperitDemo</a></strong></p>\n<h1 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h1><ol>\n<li>viper原作者 By <a href=\"mailto:jeff.gilbert@mutualmobile.com\">Jeff Gilbert</a> and <a href=\"https://twitter.com/conradstoll\">Conrad Stoll</a> 著<br><a href=\"https://www.objc.io/issues/13-architecture/viper/\">Architecting iOS Apps with VIPER</a></li>\n<li><a href=\"https://juejin.im/post/599a43035188252432172045\">iOS VIPER架构实践(二)：VIPER详解与实现</a></li>\n<li><a href=\"https://www.jianshu.com/p/340b39c6d256\">iOS架构模式-VIPER</a></li>\n</ol>\n",
            "tags": [
                "架构"
            ]
        },
        {
            "id": "http://example.com/2019/10/11/%E4%BD%BF%E7%94%A8fastlane%E5%AE%9E%E7%8E%B0iOS%E8%87%AA%E5%8A%A8%E5%8C%96%E6%89%93%E5%8C%85%E4%B8%8A%E4%BC%A0fir-im%E5%92%8Ctestflight/",
            "url": "http://example.com/2019/10/11/%E4%BD%BF%E7%94%A8fastlane%E5%AE%9E%E7%8E%B0iOS%E8%87%AA%E5%8A%A8%E5%8C%96%E6%89%93%E5%8C%85%E4%B8%8A%E4%BC%A0fir-im%E5%92%8Ctestflight/",
            "title": "使用fastlane实现iOS自动化打包上传fir.im和testflight",
            "date_published": "2019-10-11T08:41:33.000Z",
            "content_html": "<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p><em>日复一日重复打包工作，是在浪费宝贵的时间</em></p>\n<p><em>自动化打包工具应运而生，是我们解放双手的利器</em></p>\n<p><a href=\"https://docs.fastlane.tools/\">fastlane官方文档</a></p>\n<p><a href=\"https://github.com/fastlane/fastlane/tree/master/fastlane/docs#fastfile\">github地址</a></p>\n<h2 id=\"安装fastlane\"><a href=\"#安装fastlane\" class=\"headerlink\" title=\"安装fastlane\"></a>安装fastlane</h2><h3 id=\"安装最新的Xcode命令行工具\"><a href=\"#安装最新的Xcode命令行工具\" class=\"headerlink\" title=\"安装最新的Xcode命令行工具\"></a>安装最新的Xcode命令行工具</h3><blockquote>\n<p>可以<a href=\"https://developer.apple.com/download/more/\">Developer Apple</a>上手动下载对应的<code>Command Line Tools</code> 安装</p>\n</blockquote>\n<p><em>fastlane官方推荐的<code>xcode-select --install</code> 安装时最后结果是<strong>不能安装该软件</strong></em></p>\n<h3 id=\"安装-fastlane\"><a href=\"#安装-fastlane\" class=\"headerlink\" title=\"安装 fastlane\"></a>安装 fastlane</h3><p><em>放到<code>/usr/local/bin</code>下面</em></p>\n<p><code>sudo gem install -n /usr/local/bin fastlane</code></p>\n<p>其他的安装方法：（扩展，可跳过）</p>\n<p><img src=\"1970838-d07d8f2b55853319.png\"></p>\n<blockquote>\n<p>第一种是通过 Homebrew 软件包管理器来进行安装，<br>第二种就是我们最熟悉的方式，下载安装包来进行安装,<br>第三种是通过 RubyGems 来进行，RubyGems 是一个方便的 Ruby 程序包管理器，可以将一个 Ruby 应用程序打包到一个 Gem 里，作为一个安装单元。 一个  Gem 就是一个封装起来的应用程序或代码库</p>\n</blockquote>\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><p>添加用户环境变量 </p>\n<p><code>vim ~/.bash_profile</code></p>\n<p>添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;bin:$PATH</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>保存退出，使用 <code>source ~/.bash_profile</code> 来使配置立即生效</p>\n<p>现在在项目根目录下可以使用<code>fastlane</code>了</p>\n<h2 id=\"fastlane使用\"><a href=\"#fastlane使用\" class=\"headerlink\" title=\"fastlane使用\"></a>fastlane使用</h2><h3 id=\"在项目根目录下初始化\"><a href=\"#在项目根目录下初始化\" class=\"headerlink\" title=\"在项目根目录下初始化\"></a>在项目根目录下初始化</h3><p><code>fastlane init</code></p>\n<ul>\n<li><p>四个选项</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">What would you like to use fastlane for?</span><br><span class=\"line\"></span><br><span class=\"line\">1.Automate screenshots</span><br><span class=\"line\">2.Automate beta distribution to TestFlight</span><br><span class=\"line\">3.Automate App Store distribution</span><br><span class=\"line\">4.Manual setup - manually setup your project to automate your tasks</span><br></pre></td></tr></table></figure>\n<p>解释：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 自动截屏。（帮助我们截取App的显示到appstore上的 截图）</span><br><span class=\"line\">2 自动发布beta到TestFlight上，用于内测。</span><br><span class=\"line\">3 自动打包发布到AppStore上。</span><br><span class=\"line\">4 手动设置。</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<p>  上传fir选择的4</p>\n<ul>\n<li>初始化成功会生成如下目录</li>\n</ul>\n<p><img src=\"Xnip2019-10-09_14-40-37.jpg\"></p>\n<h3 id=\"配置相关文件\"><a href=\"#配置相关文件\" class=\"headerlink\" title=\"配置相关文件\"></a>配置相关文件</h3><h4 id=\"配置Gemfile\"><a href=\"#配置Gemfile\" class=\"headerlink\" title=\"配置Gemfile\"></a>配置Gemfile</h4><p>如果使用cocoapods要加上（<em>注意带上当前安装的pod的版本号</em>，否则会报错）</p>\n<p><code>gem &#39;cocoapods&#39;, &#39;~&gt;1.8.3&#39;</code> </p>\n<p>执行 </p>\n<p><code>bundle install</code></p>\n<blockquote>\n<p>第一次运行 bundle install 时自动生成 Gemfile.lock 文件。以后每次运行 bundle install 时,如果 Gemfile 中的条目不变 bundle 就不会再次计算 gem 依赖版本号，直接根据 Gemfile.lock 检查和安装 gem。如果出现依赖冲突时可以通过 bundle update 更新 Gemfile.lock</p>\n</blockquote>\n<h4 id=\"配置Fastfile\"><a href=\"#配置Fastfile\" class=\"headerlink\" title=\"配置Fastfile\"></a>配置Fastfile</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span><span class=\"title\">ault_platform</span><span class=\"params\">(<span class=\"symbol\">:ios</span>)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">platform <span class=\"symbol\">:ios</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  \tbefore_all <span class=\"keyword\">do</span></span><br><span class=\"line\">    \t<span class=\"comment\"># 如果你用 pod install</span></span><br><span class=\"line\">    \tcocoapods </span><br><span class=\"line\">  \t<span class=\"keyword\">end</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  \tdesc <span class=\"string\">&quot;打包上传ipa到fir.im&quot;</span></span><br><span class=\"line\">  \tlane <span class=\"symbol\">:fir</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  \t<span class=\"comment\"># 如果你没有申请adhoc证书，sigh会自动帮你申请，并且添加到Xcode里</span></span><br><span class=\"line\">  \t<span class=\"comment\">#\tsigh(adhoc: true)</span></span><br><span class=\"line\">      </span><br><span class=\"line\">  \t<span class=\"comment\"># 以下两个action来自fastlane-plugin-versioning，</span></span><br><span class=\"line\">  \t<span class=\"comment\"># 第一个递增 Build，第二个设定Version。</span></span><br><span class=\"line\">  \t<span class=\"comment\"># 如果你有多个target，就必须指定target的值，否则它会直接找找到的第一个plist修改</span></span><br><span class=\"line\">  \t<span class=\"comment\"># 在这里我建议每一个打的包的Build都要不一样，这样crash了拿到日志，可以对应到ipa上</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    increment_build_number_in_plist(</span><br><span class=\"line\">        <span class=\"symbol\">target:</span> <span class=\"string\">&#x27;TestDemo&#x27;</span>,</span><br><span class=\"line\"> \t\t\t\t<span class=\"symbol\">build_number:</span> <span class=\"string\">&#x27;5&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    increment_version_number_in_plist(</span><br><span class=\"line\">        <span class=\"symbol\">target:</span> <span class=\"string\">&#x27;TestDemo&#x27;</span>,</span><br><span class=\"line\">        <span class=\"symbol\">version_number:</span> <span class=\"string\">&#x27;1.0&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"comment\"># gym用来编译ipa</span></span><br><span class=\"line\">    gym(</span><br><span class=\"line\">        <span class=\"symbol\">scheme:</span> <span class=\"string\">&#x27;TestDemo&#x27;</span>,</span><br><span class=\"line\">        <span class=\"symbol\">export_method:</span> <span class=\"string\">&quot;ad-hoc&quot;</span>, <span class=\"comment\"># 指定打包方式 [&quot;app-store&quot;, &quot;ad-hoc&quot;, &quot;package&quot;, &quot;enterprise&quot;, &quot;development&quot;, &quot;developer-id&quot;]</span></span><br><span class=\"line\">        <span class=\"comment\">#teamID: &quot;xxxxxx&quot;,  # developer.apple.com 上查看</span></span><br><span class=\"line\">        <span class=\"symbol\">xcargs:</span> <span class=\"string\">&quot;-allowProvisioningUpdates&quot;</span>,</span><br><span class=\"line\">        <span class=\"symbol\">output_directory:</span> <span class=\"string\">&#x27;./firim&#x27;</span>,</span><br><span class=\"line\">        <span class=\"symbol\">output_name:</span> <span class=\"string\">&#x27;TestDemo.ipa&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"comment\"># 上传ipa到fir.im服务器，在fir.im获取firim_api_token</span></span><br><span class=\"line\">    firim(<span class=\"symbol\">firim_api_token:</span> <span class=\"string\">&quot;xxxxxxxxxxxxx&quot;</span>)  <span class=\"comment\"># token 在fir 上查看。</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  desc <span class=\"string\">&quot;打包上传testflight/app-store&quot;</span></span><br><span class=\"line\">  lane <span class=\"symbol\">:tf</span> <span class=\"keyword\">do</span></span><br><span class=\"line\"></span><br><span class=\"line\">    increment_build_number_in_plist(</span><br><span class=\"line\">        <span class=\"symbol\">target:</span> <span class=\"string\">&#x27;TestDemo&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    increment_version_number_in_plist(</span><br><span class=\"line\">        <span class=\"symbol\">target:</span> <span class=\"string\">&#x27;TestDemo&#x27;</span>,</span><br><span class=\"line\">        <span class=\"symbol\">version_number:</span> <span class=\"string\">&#x27;1.0&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"comment\"># gym用来编译ipa</span></span><br><span class=\"line\">    gym(</span><br><span class=\"line\">        <span class=\"symbol\">scheme:</span> <span class=\"string\">&#x27;TestDemo&#x27;</span>,</span><br><span class=\"line\">        <span class=\"symbol\">export_method:</span> <span class=\"string\">&quot;app-store&quot;</span>, <span class=\"comment\"># 指定打包方式</span></span><br><span class=\"line\">        <span class=\"comment\">#teamID: &quot;xxxxxx&quot;,  # developer.apple.com 上查看</span></span><br><span class=\"line\">        <span class=\"symbol\">xcargs:</span> <span class=\"string\">&quot;-allowProvisioningUpdates&quot;</span>,</span><br><span class=\"line\">        <span class=\"symbol\">output_directory:</span> <span class=\"string\">&#x27;./testflight&#x27;</span>,</span><br><span class=\"line\">        <span class=\"symbol\">output_name:</span> <span class=\"string\">&#x27;TestDemo.ipa&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"comment\">#upload_to_testflight</span></span><br><span class=\"line\">    appstore       <span class=\"comment\"># 上传你的App iTunes Connect</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>关于build_number与version_number</p>\n<p>1,version_number、build_number都没有设置，会自动获取项目的version和build版本号，并且都自动加1。例如，fastlane打包前后版本号变化：ver1.0.2（Build 11）-&gt; ver1.0.3（Build 12）；<br>2,version_number设置了、build_number没设置，会自动获取项目build版本号，build版本号+1；<br>3,version_number、build_number都设置了，那打包出来的版本号就是设置的版本号，不会自动+1；</p>\n</blockquote>\n<h4 id=\"添加两个插件\"><a href=\"#添加两个插件\" class=\"headerlink\" title=\"添加两个插件\"></a>添加两个插件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastlane add_plugin versioning</span><br><span class=\"line\">fastlane add_plugin firim</span><br></pre></td></tr></table></figure>\n<h3 id=\"执行打包\"><a href=\"#执行打包\" class=\"headerlink\" title=\"执行打包\"></a>执行打包</h3><h4 id=\"上传fir-im\"><a href=\"#上传fir-im\" class=\"headerlink\" title=\"上传fir.im\"></a>上传fir.im</h4><p><code>fastlane fir</code></p>\n<blockquote>\n<p><code>fir</code>为Fastfile文件中<code>lane :fir do</code>处设置的名字，可以为别的名字</p>\n</blockquote>\n<p>执行打包成功如下图所示：</p>\n<img src=\"Xnip2019-10-10_15-01-27.jpg\" style=\"zoom:5%\" />\n\n<ul>\n<li><p>根目录下<code>firim</code>文件夹下可看到<code>ipa</code>文件</p>\n<p><img src=\"Xnip2019-10-10_15-22-43.jpg\"></p>\n</li>\n<li><p>fir.im应用列表，多了刚上传的项目</p>\n<p><img src=\"Xnip2019-10-10_15-01-59.jpg\"></p>\n</li>\n</ul>\n<h4 id=\"上传testFlight\"><a href=\"#上传testFlight\" class=\"headerlink\" title=\"上传testFlight\"></a>上传testFlight</h4><p><code>fastlane tf</code></p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><ol>\n<li>Could not find action, lane or variable ‘increment_build_number_in_plist’…</li>\n</ol>\n<p><img src=\"Xnip2019-10-10_11-39-52.jpg\"></p>\n<ul>\n<li><p>解决：</p>\n<p><code>fastlane add_plugin versioning</code></p>\n</li>\n</ul>\n<p>参考：<a href=\"https://github.com/SiarheiFedartsou/fastlane-plugin-versioning/issues/20\">https://github.com/SiarheiFedartsou/fastlane-plugin-versioning/issues/20</a></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"https://www.jianshu.com/p/2918cf082b9d\">fastlane 自动打包到 fir.im 的踩坑之路</a></li>\n<li><a href=\"https://docs.fastlane.tools/getting-started/ios/setup/\">fastlane ios快读入门文档</a></li>\n<li><a href=\"https://www.jianshu.com/p/19ae8cc865b0\">fastlane使用说明书</a></li>\n<li><a href=\"https://www.jianshu.com/p/48343a655f75\">fastlane 在mac上配置iOS自动化上架</a></li>\n<li><a href=\"https://www.jianshu.com/p/eab3e1ded17d\">iOS 自动打包 - fastlane （一）</a></li>\n<li><a href=\"https://juejin.im/post/5a7d51986fb9a063435ece35\">和重复劳动说再见-使用fastlane进行iOS打包</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/25976099\">macOS/Linux 环境变量设置</a></li>\n</ol>\n",
            "tags": [
                "自动化打包"
            ]
        },
        {
            "id": "http://example.com/2019/09/26/%E5%9F%BA%E4%BA%8EHexo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/",
            "url": "http://example.com/2019/09/26/%E5%9F%BA%E4%BA%8EHexo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/",
            "title": "基于Hexo和Github搭建技术博客",
            "date_published": "2019-09-26T06:40:33.000Z",
            "content_html": "<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备:\"></a>准备:</h2><p><code>nodejs</code>、<code>git</code>、<code>npm</code>、<code>hexo</code></p>\n<p>验证有没有敲命令，eg: <code>npm -v</code>，没有装先去装</p>\n<ul>\n<li><p>npm可通过homebrew安装</p>\n<p><code>brew install npm</code> </p>\n</li>\n<li><p>Hexo安装</p>\n<p><code>npm install hexo-cli -g</code></p>\n</li>\n</ul>\n<h2 id=\"开始搭建博客\"><a href=\"#开始搭建博客\" class=\"headerlink\" title=\"开始搭建博客\"></a>开始搭建博客</h2><ul>\n<li><p>本地创建一个存放博客文件夹</p>\n<p>eg: SkytechMobileBlog</p>\n</li>\n<li><p>切到<code>SkytechMobileBlog</code>目录下执行<code>初始化</code></p>\n<p><code>hexo init</code></p>\n</li>\n<li><p>然后安装依赖</p>\n<p><code>npm install</code></p>\n</li>\n<li><p>生成静态文件</p>\n<p><code>hexo g</code></p>\n</li>\n<li><p>创建服务</p>\n<p><code>hexo s</code></p>\n</li>\n<li><p>hexo常用命令：</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>hexo init</code></td>\n<td>初始化一个文件夹，它会为这个文件夹配置所有骨架</td>\n</tr>\n<tr>\n<td><code>hexo g</code></td>\n<td>即hexo generate，生成静态文件</td>\n</tr>\n<tr>\n<td><code>hexo s</code></td>\n<td>即hexo server，创建服务</td>\n</tr>\n<tr>\n<td><code>hexo d</code></td>\n<td>即hexo deploy,用于将本地文件发布到github上</td>\n</tr>\n<tr>\n<td><code>hexo n</code></td>\n<td>即hexo new,用于新建一篇文章</td>\n</tr>\n</tbody></table>\n<p>现在只是在本地搭建了一个技术博客，</p>\n<p>要想把博客内容让所有人都能看到，就得借助Github了，把博客内容部署到Github上去</p>\n</li>\n</ul>\n<a id=\"more\"></a>\n\n<h2 id=\"部署到github\"><a href=\"#部署到github\" class=\"headerlink\" title=\"部署到github\"></a>部署到github</h2><ol>\n<li>GitHub上登录/注册一个账号，创建仓库</li>\n</ol>\n<ul>\n<li><p>如果是团队博客</p>\n<p>先<code>New organization</code>，再<code>New repository</code>（名字为<code>xxx.github.io</code>，<code>xxx</code>为organization名称）</p>\n</li>\n<li><p>如果是个人博客：</p>\n<p><code>New repository</code>（名字为<code>xxx.github.io</code>，<code>xxx</code>为github账号）</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>博客的根目录的<code>_config.yml</code>文件的底部<code>deploy</code>设置为：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: https:&#x2F;&#x2F;github.com&#x2F;SkytechMobile&#x2F;SkytechMobile.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>注意：冒号（:）后都有一个空格。你可以把此段代码复制过去，并把<code>https://github.com/SkytechMobile/SkytechMobile.github.io.git</code>替换为你自己的Github仓库路径</p>\n<ol start=\"3\">\n<li><p>部署</p>\n<p>根目录下执行</p>\n<p><code>hexo g</code></p>\n<p><code>hexo d</code></p>\n<p>或者直接</p>\n<p><code>hexo g -d</code></p>\n<p>如果此时报错你可以输入<code>npm install hexo-deployer-git --save</code>来解决</p>\n</li>\n<li><p>以上都没什么问题的话，访 <a href=\"http://skytechmobile.github.io/\">http://SkytechMobile.github.io/</a> 就能看到自己的博客了</p>\n</li>\n</ol>\n<h2 id=\"主题配置\"><a href=\"#主题配置\" class=\"headerlink\" title=\"主题配置\"></a>主题配置</h2><p>Eg: 把主题设置为<code>next</code>，最火的hexo的主题。</p>\n<ol>\n<li><p>下载主题</p>\n<p>在跟目录文件夹下输入如下命令下载next主题</p>\n<p><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p>\n</li>\n<li><p>设置主题</p>\n<p>把<code>SKytechMobileBlog/_config.yml</code>文件称为<code>站点配置</code></p>\n<p>把<code>SKytechMobileBlog/_config.yml</code>文件称为<code>主题配置</code></p>\n</li>\n</ol>\n<p>下载完成后，将<code>站点配置</code>文件的<code>theme</code>字段的值改为<code>next</code>，重新编译并上传到Github上后，访问博客链接，你就会发现主题已经改成next了</p>\n<p>next的默认语言为英文，你可以更改为简体中文，找到并打开<code>站点配置</code>文件，找到<code>language</code>字段，将值改为<code>zh-Hans</code></p>\n<ol start=\"3\">\n<li>这里介绍下<code>站点配置</code>文件部分字段的含义：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: SkytechMobile团队博客 &#x2F;&#x2F; 博客名称</span><br><span class=\"line\">subtitle:\t\t\t   &#x2F;&#x2F; 博客副名称</span><br><span class=\"line\">description:           &#x2F;&#x2F; 描述</span><br><span class=\"line\">author: 晨之科SDK团队    &#x2F;&#x2F; 作者</span><br><span class=\"line\">language: zh-Hans      &#x2F;&#x2F; 语言</span><br></pre></td></tr></table></figure>\n<h2 id=\"关于新建博客\"><a href=\"#关于新建博客\" class=\"headerlink\" title=\"关于新建博客\"></a>关于新建博客</h2><h3 id=\"一、如何新建博客\"><a href=\"#一、如何新建博客\" class=\"headerlink\" title=\"一、如何新建博客\"></a>一、如何新建博客</h3><p>新建命令</p>\n<p><code>hexo new xxx</code></p>\n<p>执行上面的命令即在<code>source/_posts/</code>目录下新建了名为<code>xxx的md文件</code>和<code>资源文件夹</code></p>\n<h3 id=\"二、将本地博客发布到线上\"><a href=\"#二、将本地博客发布到线上\" class=\"headerlink\" title=\"二、将本地博客发布到线上\"></a>二、将本地博客发布到线上</h3><p>生成静态文件，并将本地文件发布到github上，合并执行</p>\n<p><code>hexo g -d</code></p>\n<h3 id=\"三、写博客注意点\"><a href=\"#三、写博客注意点\" class=\"headerlink\" title=\"三、写博客注意点\"></a>三、写博客注意点</h3><ol>\n<li>如何上传带图片的博客？</li>\n</ol>\n<p><img src=\"useImage.png\"></p>\n<ol start=\"2\">\n<li><p>团队博客设置作者</p>\n<p>可在博客md文件<code>分类</code>字段设置</p>\n<p><code>categories：作者：Fan Chason</code></p>\n</li>\n</ol>\n<p><img src=\"common_on.png\"></p>\n",
            "tags": [
                "搭建博客"
            ]
        }
    ]
}